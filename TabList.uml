@startuml

interface cc.UIResourceClient {
  GetBitmap(uid, resource_lost)
}

cc.UIResourceClient <|-- Thumbnail
class Thumbnail {
  {static} Create(tab_id, thumbnail_delegate)
  SetBitmap()
  GetBitmap()
}

interface ThumbnailDelegate {
  InvalidateCachedThumbnail(thumbnail)
}

interface ThumbnailCacheObserver {
  OnFinishedThumbnailRead(tab_id)
}

ThumbnailDelegate <|-- ThumbnailCache
class ThumbnailCache {
  Thumbnail* Get(tab_id)
  Put(tab_id, bitmap)
  Remove(tab_id)
}
ThumbnailCache --> ExpringThumbnailCache : cache_


class ExpringThumbnailCache
ExpringThumbnailCache *-- Thumbnail


interface Layer {
  cc.Layer layer()
}

Layer <|-- ContentLayer
class ContentLayer {
  SetProperties(id, ...)
  ComputeSize(id)
}
ContentLayer --> TabContentManager : tab_content_manager_

Layer <|-- ToolbarLayer
class ToolbarLayer

Layer <|-- TabLayer
class TabLayer {
  {static} Create(incognito, tab_content_manager)
  SetProperties(id, ...)
}
TabLayer --> ContentLayer : content_layer_
TabLayer --> ToolbarLayer : toolbar_layer_
TabLayer --> cc.Layer : layer_, title_
note "layer {toolbar, close button, title, content, ...}" as note_TabLayer
TabLayer .. note_TabLayer

class TabListSceneLayer {
  BeginBuildingFrame()
  UpdateLayer()
  PutTabLayer()
  FinishBuildingFrame()
}
TabListSceneLayer "1" *-- "many" TabLayer : tab_map_

ThumbnailCacheObserver <|-- TabContentManager
class TabContentManager {
  {static} FromJavaObject(jobj)
  GetLiveLayer()
  GetStaticLayer()
  GetOrCreateStaticlayer()
  AttachLiveLayer()
  DetachLiveLayer()
}
TabContentManager --> ThumbnailCache : thumbnail_cache_

class CompositorView {

}

content.CompositorClient <|-- CompositorView
content.BrowserChildProcessObserver <|-- CompositorView

interface java.SurfaceHolderCallbackTarget {
  surfaceRedrawNeededAsync()
  surfaceChanged()
  surfaceCreated()
  surfaceDestroyed()
}

class java.CompositorView {
  finalizeLayers()
}
note "finalizeLayers() {\n  preload resources\n  nativeSetLayoutBounds\n  retreive sceneLayer\n  nativeSetSceneLayer\n  nativeFinalizeLayers\n}" as note_compositor_view
java.CompositorView .. note_compositor_view
java.FrameLayout <|-- java.CompositorView
java.SurfaceHolderCallbackTarget <|-- java.CompositorView

interface java.LayoutRenderHost {
  void requestRender()
  void onCompositorLayout()
  void didSwapFrame(pendingFrameCount)
  void onSurfaceCreated()
  void onSurfaceResized()
  ResourceManager getResourceManager()
}

java.CompositorView -- CompositorView : [jni]
java.CompositorView --> java.LayoutRenderHost : mRenderHost


class java.CompositorViewHolder {
  void onCompositorLayout()
}
note bottom: onCompositorLayout() {\n  mCompositorView.finalizeLayers()\n}
java.FrameLayout <|-- java.CompositorViewHolder
java.LayoutRenderHost <|-- java.CompositorViewHolder
java.CompositorViewHolder --> java.CompositorView : mCompositorView
java.CompositorViewHolder --> java.LayoutManager

interface java.LayoutProvider {
  Layout getActiveLayout()
  SceneLayer getUpdatedActiveSceneLayer()
}

class java.LayoutManager {
  startShowing(layout, animate)
  setNextLayout(layout)
}
java.LayoutProvider <|-- java.LayoutManager
java.LayoutManager --> java.Layout : mActiveLayout, mNextActiveLayout

java.Layout *-- java.LayoutTab : mLayoutTabs

class java.LayoutManagerDocument
java.LayoutManagerChrome <|-- java.LayoutManagerChromeTablet
java.LayoutManagerChrome <|-- java.LayoutManagerChromePhone
java.LayoutManagerDocument <|-- java.LayoutManagerChrome
java.LayoutManager <|-- java.LayoutManagerDocument


java.TabListSceneLayer <|-- java.SceneLayer
java.StaticTabSceneLayer <|-- java.SceneLayer
java.SceneOverlayLayer <|-- java.SceneLayer


class java.TabListSceneLayer {
  pushLayers(Layout layout)
}
note right: pushLayers() {\n  nativeBeginBuildingFrame()\n  nativeUpdateLayer()\n  for each LayoutTab { nativePutTabLayer() }\n nativeFinishBuildingFrame()\n}
java.TabListSceneLayer -- TabListSceneLayer : [jni]



class java.TabContentManager
java.TabContentManager -- TabContentManager : [jni]



class java.Layout
class java.StackLayout
java.Layout <|-- java.StackLayout
java.StackLayout "1" *-- "2" java.Stack
java.StackLayout --> java.TabListSceneLayer : mSceneLayer

class java.Stack
java.Stack "1" *-- "many" java.StackTab : mSortedPriorityArray

class java.StackTab
java.StackTab --> java.LayoutTab : mLayoutTab

note "correspond to each other" as note_LayoutTab_TabLayer
java.LayoutTab .. note_LayoutTab_TabLayer
note_LayoutTab_TabLayer .. TabLayer




@enduml
